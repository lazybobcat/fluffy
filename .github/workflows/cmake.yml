name: CMake

on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      
  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - uses: ArtificialAmateur/cpp-linter-action@0.01
      continue-on-error: true
    
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - name: Install Dependencies
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install gcc-10 g++-10 libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libgl1-mesa-dev
      
    - name: Check GCC versions
      shell: bash
      run: |
        export CC=gcc-10
        export CXX=g++-10
        gcc -v
        g++ -v

    - name: Create Build Environment
      shell: bash
      env:
       CC:   gcc-10
       CXX:  g++-10
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      env:
       CC:   gcc-10
       CXX:  g++-10
      working-directory: ${{github.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      env:
       CC:   gcc-10
       CXX:  g++-10
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: |
        cmake --build . --target unittests --config $BUILD_TYPE
        make -j 4

  tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Test
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: ./unittests
